package ch09;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class StudentDAO {
	Connection conn = null;
	ResultSet rs=null;
	// SQL을 JDBC에서 처리할 수 있는 객체 pstmt
	PreparedStatement pstmt=null;
	
	// 
	final String JDBC_DRIVER = "org.h2.Driver";
	final String JDBC_URL = "jdbc:h2:tcp://localhost/~/KrongNewProject4.0";

	// DB locking 상태 open() : 연결상태
	public void open() {
		try {
			Class.forName(JDBC_DRIVER);
			conn = DriverManager.getConnection(JDBC_URL, "krong", "1234");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// locking 상태 close() : 종료상태
	public void close() {
		try {
			if(pstmt!=null) {
				pstmt.close();
				pstmt=null;
			}
			// SQL에서 발생하는 오류 trace & print
		} catch (SQLException e) {
			e.printStackTrace();
		}
		try {
			if(rs != null) {
				rs.close();
				rs=null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		try {
			if(conn != null) {
				conn.close();
				conn=null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public void insert(Student s) {
		open();
		String sql="INSERT INTO student(username, univ, birth, email) values(?,?,?,?)";
		
		try {
			// pstmt 객체로 sql과 연결
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, s.getUsername());
			pstmt.setString(2, s.getUniv());
			pstmt.setDate(3, s.getBirth());
			pstmt.setString(4, s.getEmail());
			
			pstmt.executeUpdate();
		} catch (Exception e){
			e.printStackTrace();
		} finally {
			close();
		}
	}
	
	// DB에 있는 DATA 전부 가져오기 타입 : List
	public List<Student> getAll() {
		open();
		List<Student> students = new ArrayList<>();
		
		try {
			pstmt = conn.prepareStatement("select * from student");
			rs = pstmt.executeQuery();
			
			while (rs.next()) {
				Student s = new Student();
				s.setId(rs.getInt("id"));
				s.setUsername(rs.getString("username"));
				s.setUniv(rs.getString("univ"));
				s.setBirth(rs.getDate("birth"));
				s.setEmail(rs.getString("email"));
				
				students.add(s);
			}
		} catch (Exception e){
			e.printStackTrace();
		} finally {
			close();
		}
		
		return students;
	}
}
